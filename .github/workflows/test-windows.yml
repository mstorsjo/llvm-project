name: Run tests on Windows
on:
  push:

jobs:
  llvm:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64
    runs-on: ${{startsWith(matrix.arch, 'a') && 'windows-11-arm' || 'windows-latest'}}
    steps:
      - name: Install dependencies
        run: |
          choco install -y ninja
          curl -LO https://github.com/Kitware/CMake/releases/download/v4.0.1/cmake-4.0.1-windows-arm64.msi
          msiexec /i cmake-4.0.1-windows-arm64.msi /qn /norestart
      - name: Configure Git core.autocrlf
        run: |
          git config --global core.autocrlf false
      - uses: actions/checkout@v4
      - name: Install llvm-mingw
        run: |
          curl -LO https://github.com/mstorsjo/llvm-mingw/releases/download/nightly/llvm-mingw-nightly-ucrt-${{matrix.arch}}.zip
          powershell Expand-Archive llvm-mingw*.zip -DestinationPath .
          del llvm-mingw*.zip
          mv llvm-mingw* c:\llvm-mingw
          echo "c:\llvm-mingw\bin" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
      - name: Where cmake
        shell: cmd
        run: |
          where cmake
      - name: Build the project and unittests
        run: |
          mkdir build
          cd build
          cmake ../llvm `
            -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DLLVM_HOST_TRIPLE=${{matrix.arch}}-w64-windows-gnu `
            -DCMAKE_SYSTEM_PROCESSOR=${{matrix.arch}} `
            -DCMAKE_SYSTEM_NAME=Windows `
            -DLLVM_TARGETS_TO_BUILD="X86;AArch64" `
            -DLLVM_WINDOWS_PREFER_FORWARD_SLASH=OFF `
            -DCMAKE_C_COMPILER=clang `
            -DCMAKE_CXX_COMPILER=clang++ `
            -DLLVM_LIT_ARGS="-v --time-tests"
